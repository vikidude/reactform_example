{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","resetForm","setState","baseState","state","name","age","gender","email","number","userform","usercount","validate","bind","onSubmit","this","length","RegExp","test","parseInt","alert","console","log","push","style","textAlign","margin","textDecoration","className","id","type","value","placeholder","onChange","event","target","onClick","userdata","React","Component","UserCount","DisplayUser","display","map","data","index","key","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a21fb4e6.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nexport default class App extends React.Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      name:'',\n      age:'',\n      gender:'',\n      email:'',\n      number:'',\n      userform:[],\n      usercount:0\n    }\n    this.validate=this.validate.bind(this);\n    this.onSubmit=this.onSubmit.bind(this); \n    this.baseState = this.state; \n  }\n  resetForm = () => {\n    this.setState(this.baseState);\n  }\n  validate() {\n    if (this.state.name.length > 3) {\n      if (this.state.age.length > 1) {\n        if (this.state.gender.length > 2) {\n          if (this.state.email.length > 8) {\n            if (this.state.number.length > 9) {\n              if (this.state.userform.length > 0) {\n                if (this.state.number !== this.state.userform[this.state.userform.length - 1].number && this.state.email !== this.state.userform[this.state.userform.length - 1].email) {\n                  if (this.state.number.length === 10) {\n                    if ((new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/).test(this.state.email))) {\n                      if ((parseInt(this.state.age)) >= 18) {\n                        this.onSubmit();\n                      } else {\n                        alert('You are not an adult');\n                      }\n                    } else {\n                      alert(\"Email is not valid\");\n                    }\n                  } else {\n                    alert('Enter a valid 10 digits number');\n                  }\n                } else {\n                  alert('Number or email already exists');\n                }\n              } else {\n                if (this.state.number.length === 10) {\n                  if (new RegExp(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/).test(this.state.email)) {\n                    console.log(parseInt(this.state.age) >= 18)\n                    if (parseInt(this.state.age) >= 18) {\n                      this.onSubmit();\n                    } else {\n                      alert('You are not an adult');\n                    }\n                  } else {\n                    alert(\"Email is not valid\");\n                  }\n                } else {\n                  alert('Enter a valid 10 digits number');\n                }\n              }\n            } else {\n              alert(\"Number required!\");\n            }\n          } else {\n            alert(\"Email required!\");\n          }\n        } else {\n          alert(\"Gender required!\");\n        }\n      } else {\n        alert(\"Age required!\");\n      }\n    } else {\n      alert(\"Name required!\");\n    }\n\n  }\n\n  onSubmit(){\n      this.state.userform.push({name:this.state.name,age:this.state.age,gender:this.state.gender,email:this.state.email,number:this.state.number});\n      this.setState({usercount:this.state.usercount+1});\n      //this.resetForm();\n  }\n\n  render(){\n    return(\n        <div style={{textAlign:'center'}}>\n          <h1 style={{textAlign:\"center\"}}>User Form Registration</h1>\n          <p style={{textAlign:'right',margin:20, textDecoration:'underline'}}>Total Registered User:<UserCount usercount={this.state.usercount} /></p>\n          <div className=\"form\" id=\"firstdiv\">\n              <label >Name</label>\n              <input type=\"text\" value={this.state.name} placeholder=\"Enter your name\" onChange={event=> this.setState({name:event.target.value})} />\n\n              <label>Age</label>\n              <input type=\"number\" value={this.state.age} placeholder=\"Enter your age\" onChange={event=> this.setState({age:event.target.value})} />\n\n              <label>Gender</label><br/>\n              <input type=\"radio\" name=\"gender\" value=\"Male\"  onChange={event=> this.setState({gender:event.target.value})} />Male\n              <input type=\"radio\" name=\"gender\" value=\"Female\" onChange={event=> this.setState({gender:event.target.value})} />Female\n<br/>\n\n              <label>Email</label>\n              <input type=\"text\" value={this.state.email} placeholder=\"Enter your mail id\" onChange={event=> this.setState({email:event.target.value})} />\n\n              <label>Number</label>\n              <input type=\"number\" value={this.state.number} placeholder=\"Enter your mobile number\" onChange={event=> this.setState({number:event.target.value})} />\n              <div id=\"btn\">\n                <input type=\"submit\" value=\"Submit\" onClick={()=> this.validate()}/>\n              </div>\n          </div>\n          <div id=\"seconddiv\">\n              <DisplayUser userdata={this.state.userform} usercount = {this.state.usercount} />\n          </div>\n          \n        </div>\n    );\n  }\n}\n\nclass UserCount extends React.Component{\n\n  render(){\n    return(\n        <b>{this.props.usercount}</b>\n    );\n  }\n}\n\nclass DisplayUser extends React.Component{\n\n  render(){\n    return(\n        <div style={{textAlign:'center'}}>\n          <h2 style={{textAlign:'center'}}>User List</h2>\n          {this.props.usercount>0?(\n            \n            <table style={{display:'inline-block'}} id=\"users\">\n              <thead>\n                <tr>\n                  <th>S No</th>\n                  <th>Name</th>\n                  <th>Age</th>\n                  <th>Gender</th>\n                  <th>Email</th>\n                  <th>Number</th>\n                </tr>\n              </thead>\n              <tbody>\n                  {this.props.userdata.map((data,index)=>\n                   <tr key={index}>\n                      <td>{index+1}</td>\n                      <td>{data.name}</td>\n                      <td>{data.age}</td>\n                      <td>{data.gender}</td>\n                      <td>{data.email}</td>\n                      <td>{data.number}</td>\n                      </tr>\n                    )}\n              </tbody>\n            </table>\n            ):[]}\n        </div>\n    );\n  }\n}\n// function App() {\n//   return (\n//     <div className=\"App\">\n//       <header className=\"App-header\">\n//         <img src={logo} className=\"App-logo\" alt=\"logo\" />\n//         <p>\n//           Edit <code>src/App.js</code> and save to reload.\n//         </p>\n//         <a\n//           className=\"App-link\"\n//           href=\"https://reactjs.org\"\n//           target=\"_blank\"\n//           rel=\"noopener noreferrer\"\n//         >\n//           Learn React\n//         </a>\n//       </header>\n//     </div>\n//   );\n// }","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}